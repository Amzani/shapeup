name: PR ADR Validation Workflow

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - labeled
      - unlabeled

jobs:
  validate_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Parse PR label and title
        uses: actions/github-script@v6
        id: lint_title_adr
        with:
          result-encoding: json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = context.payload.pull_request.title;
            const labels = context.payload.pull_request.labels;
            const hasAdrLabel = labels.some(label => label.name === 'kind/adr');
            const re = /^chore:\s*\[ADR-\d{4}\]/;
            const startsWithAdr = (title.match(re) !== null);
            console.log(`title : ${title} - labels: ${labels} - hasAdrLabel: ${hasAdrLabel} - startsWithAdr: ${startsWithAdr}`);
            if (hasAdrLabel && !startsWithAdr) {
              return {
                status: "ko",
                message: "The PR Title must starts with `chore: [ADR-nnnn] name of ADR` where `nnnn` is the adr number (e.g `chore: [ADR-0001] use architecture decision records`) same us commits"
              }
            }
            if (!hasAdrLabel && startsWithAdr) {
              return {
                status: "ko",
                message: "The PR Title must starts with `chore: [ADR-nnnn] name of ADR` where `nnnn` is the adr number (e.g `chore: [ADR-0001] use architecture decision records`) same us commits"
              }
            }
            if (hasAdrLabel && startsWithAdr) {
              return {
                status: "ok",
                message: "The PR has correct title and label"
              }
            }
            return ''
      - name: Check PR label and title
        uses: actions/github-script@v6
        id: lint_title_adr_check
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (${{ steps.lint_title_adr.outputs.result != '' }}) {
              console.log(${{ steps.lint_title_adr.outputs.result }}?.message)
            }
      - if: always() && ${{ fromJSON(steps.lint_title_adr.outputs.result).status == 'ko' }}
        uses: marocchino/sticky-pull-request-comment@v2
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        with:
          header: pr-title-lint-adr-error
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          message: |
            Hey there and thank you for opening this ADR pull request! üëãüèº
            The ADR Pull request must follow this PR naming convention: 
            ```
            ${{ fromJSON(steps.lint_title_adr.outputs.result).message }}
            ```
      # Delete a previous comment when the issue has been resolved
      - if: ${{ fromJSON(steps.lint_title_adr.outputs.result).status == 'ok' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          header: pr-title-lint-adr-error
          delete: true
      - if: ${{ fromJSON(steps.lint_title_adr.outputs.result).status == 'ok' }}
        name: Run changed-files with json output
        id: changed_files
        uses: tj-actions/changed-files@v37
        with:
          json: "true"
      - if: ${{ fromJSON(steps.lint_title_adr.outputs.result).status == 'ok' }}
        name: List all changed files
        run: |
          for file in ${{ steps.changed_files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - if: ${{ fromJSON(steps.lint_title_adr.outputs.result).status == 'ok' }}
        name: Display changed files
        uses: actions/github-script@v6
        id: check_changed_files
        with:
          result-encoding: json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changedFilesCount = ${{ steps.changed_files.outputs.all_changed_files_count }};
            const output = ${{ steps.changed_files.outputs.all_changed_files }};
            console.log(`output`, output);
